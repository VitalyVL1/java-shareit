-- Блок для обнуления таблиц для целей тестирования, удалить из итоговой версии
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS booking;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users
(
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR(255),
    email   VARCHAR(512) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description  VARCHAR(512) NOT NULL,
    requestor_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    created      TIMESTAMP WITHOUT TIME ZONE
);

CREATE TABLE IF NOT EXISTS items
(
    item_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(255) NOT NULL,
    description  VARCHAR(512),
    is_available BOOLEAN      NOT NULL,
    owner_id     INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    request_id   INTEGER      REFERENCES requests (request_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS booking
(
    booking_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id    INTEGER REFERENCES items (item_id) ON DELETE CASCADE,
    booker_id  INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    status     VARCHAR(100)                NOT NULL
);

CREATE TABLE IF NOT EXISTS comments
(
    comment_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text       VARCHAR(512) NOT NULL,
    item_id    INTEGER REFERENCES items (item_id) ON DELETE CASCADE,
    author_id  INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    status     VARCHAR(100) NOT NULL
);